# =============================================================================
# Project Configuration
# =============================================================================
project_id  = "<your-project-id>"
network_name = "pexip-infinity"

# =============================================================================
# Region Configuration
# =============================================================================
regions = {
  "<region>" = {
    subnet_name = "<subnet-name>"
    zones       = ["<zone-a>", "<zone-b>", "<zone-c>"]
  }
}

# =============================================================================
# Node Naming
# =============================================================================
mgmt_node_name       = "pexip-mgmt"
transcoding_node_name = "pexip-transcoding"
proxy_node_name      = "pexip-proxy"

# =============================================================================
# Pexip Version and Images
# =============================================================================
pexip_version = "<version>"

pexip_images = {
  management = {
    source_file = "<path-to-management-node-image>"
    name        = null  # Optional: Set to override default image name
  }
  conference = {
    source_file = "<path-to-conference-node-image>"
    name        = null  # Optional: Set to override default image name
  }
}

# =============================================================================
# Management Node Configuration
# =============================================================================
mgmt_node = {
  zone                = "<zone>"
  region              = "<region>"
  hostname            = "<hostname>"
  domain              = "<domain>"
  machine_type        = "n2-standard-4"
  disk_size          = 100
  disk_type          = "pd-standard"
  gateway_ip         = "<gateway-ip>"
  subnet_cidr        = "<subnet-cidr>"
  admin_username      = "<admin-username>"
  admin_password_hash = "<admin-password-hash>"  # Generate using Pexip's password hash generator
  os_password_hash    = "<os-password-hash>"     # Generate using mkpasswd -m sha-512
  public_ip          = true
  static_ip          = true
  allowed_cidrs = {
    admin_ui = ["<admin-ui-cidr>"]  # Restrict admin UI access
    ssh      = ["<ssh-cidr>"]       # Restrict SSH access
  }
  service_cidrs = {
    directory = ["<directory-cidr>"]
    smtp      = ["<smtp-cidr>"]
    syslog    = ["<syslog-cidr>"]
  }
}

# =============================================================================
# Conferencing Node Configuration
# =============================================================================
conferencing_nodes = {
  allowed_cidrs = {
    provisioning = ["<provisioning-cidr>"]  # Restrict this to specific IPs that need provisioning access
  }
}

# =============================================================================
# Transcoding Node Pool Configuration
# =============================================================================
transcoding_node_pools = {
  pool1 = {
    machine_type = "n2-standard-4"
    disk_size    = 50
    disk_type    = "pd-standard"
    region       = "<region>"
    zone         = "<zone>"
    count        = 1
    public_ip    = true
    static_ip    = true
  }
}

# =============================================================================
# Proxy Node Pool Configuration
# =============================================================================
proxy_node_pools = {
  pool1 = {
    region     = "<region>"
    zone       = "<zone>"
    count      = 1
    public_ip  = true
    static_ip  = true
  }
}

# =============================================================================
# Transcoding Node Service Configuration
# =============================================================================
transcoding_services = {
  enable_protocols = {
    sip    = true
    h323   = true
    webrtc = true
    teams  = true
    gmeet  = true
  }
  enable_services = {
    one_touch_join = false
    event_sink     = false
    epic           = false
    captions       = false
  }
  ports = {
    media = {
      udp_range = {
        start = 40000
        end   = 49999
      }
    }
    signaling = {
      sip_tcp  = ["5060", "5061"]
      sip_udp  = ["5060"]
      h323_tcp = ["1720"]
      h323_udp = ["1719"]
      webrtc   = ["443"]
    }
    services = {
      one_touch_join = ["443"]
      event_sink     = ["443"]
    }
  }
}

# =============================================================================
# Proxy Node Service Configuration
# =============================================================================
proxy_services = {
  enable_protocols = {
    sip    = true
    h323   = true
    webrtc = true
    teams  = true
    gmeet  = true
  }
  ports = {
    media = {
      udp_range = {
        start = 40000
        end   = 49999
      }
    }
    signaling = {
      sip_tcp  = ["5060", "5061"]
      sip_udp  = ["5060"]
      h323_tcp = ["1720"]
      h323_udp = ["1719"]
      webrtc   = ["443"]
    }
  }
}
